//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	"encoding/json"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error) DeepCopyInto(out *Error) {
	*out = *in
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = new([]ErrorSource)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ErrorSource, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error.
func (in *Error) DeepCopy() *Error {
	if in == nil {
		return nil
	}
	out := new(Error)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error400) DeepCopyInto(out *Error400) {
	*out = *in
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = new([]ErrorSource)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ErrorSource, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error400.
func (in *Error400) DeepCopy() *Error400 {
	if in == nil {
		return nil
	}
	out := new(Error400)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error401) DeepCopyInto(out *Error401) {
	*out = *in
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = new([]ErrorSource)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ErrorSource, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error401.
func (in *Error401) DeepCopy() *Error401 {
	if in == nil {
		return nil
	}
	out := new(Error401)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error403) DeepCopyInto(out *Error403) {
	*out = *in
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = new([]ErrorSource)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ErrorSource, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error403.
func (in *Error403) DeepCopy() *Error403 {
	if in == nil {
		return nil
	}
	out := new(Error403)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error404) DeepCopyInto(out *Error404) {
	*out = *in
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = new([]ErrorSource)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ErrorSource, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error404.
func (in *Error404) DeepCopy() *Error404 {
	if in == nil {
		return nil
	}
	out := new(Error404)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error500) DeepCopyInto(out *Error500) {
	*out = *in
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = new([]ErrorSource)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ErrorSource, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error500.
func (in *Error500) DeepCopy() *Error500 {
	if in == nil {
		return nil
	}
	out := new(Error500)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorSource) DeepCopyInto(out *ErrorSource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorSource.
func (in *ErrorSource) DeepCopy() *ErrorSource {
	if in == nil {
		return nil
	}
	out := new(ErrorSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalResourceMetadata) DeepCopyInto(out *GlobalResourceMetadata) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	if in.DeletedAt != nil {
		in, out := &in.DeletedAt, &out.DeletedAt
		*out = (*in).DeepCopy()
	}
	in.LastModifiedAt.DeepCopyInto(&out.LastModifiedAt)
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalResourceMetadata.
func (in *GlobalResourceMetadata) DeepCopy() *GlobalResourceMetadata {
	if in == nil {
		return nil
	}
	out := new(GlobalResourceMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListRegionsParams) DeepCopyInto(out *ListRegionsParams) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(LabelSelector)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(LimitParam)
		**out = **in
	}
	if in.SkipToken != nil {
		in, out := &in.SkipToken, &out.SkipToken
		*out = new(SkipTokenParam)
		**out = **in
	}
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(ListRegionsParamsAccept)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListRegionsParams.
func (in *ListRegionsParams) DeepCopy() *ListRegionsParams {
	if in == nil {
		return nil
	}
	out := new(ListRegionsParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModificationMetadata) DeepCopyInto(out *ModificationMetadata) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	if in.DeletedAt != nil {
		in, out := &in.DeletedAt, &out.DeletedAt
		*out = (*in).DeepCopy()
	}
	in.LastModifiedAt.DeepCopyInto(&out.LastModifiedAt)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModificationMetadata.
func (in *ModificationMetadata) DeepCopy() *ModificationMetadata {
	if in == nil {
		return nil
	}
	out := new(ModificationMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NameMetadata) DeepCopyInto(out *NameMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NameMetadata.
func (in *NameMetadata) DeepCopy() *NameMetadata {
	if in == nil {
		return nil
	}
	out := new(NameMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionMetadata) DeepCopyInto(out *PermissionMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionMetadata.
func (in *PermissionMetadata) DeepCopy() *PermissionMetadata {
	if in == nil {
		return nil
	}
	out := new(PermissionMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Provider) DeepCopyInto(out *Provider) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Provider.
func (in *Provider) DeepCopy() *Provider {
	if in == nil {
		return nil
	}
	out := new(Provider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Reference) DeepCopyInto(out *Reference) {
	*out = *in
	if in.union != nil {
		in, out := &in.union, &out.union
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Reference.
func (in *Reference) DeepCopy() *Reference {
	if in == nil {
		return nil
	}
	out := new(Reference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceObject) DeepCopyInto(out *ReferenceObject) {
	*out = *in
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tenant != nil {
		in, out := &in.Tenant, &out.Tenant
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceObject.
func (in *ReferenceObject) DeepCopy() *ReferenceObject {
	if in == nil {
		return nil
	}
	out := new(ReferenceObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Region) DeepCopyInto(out *Region) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(GlobalResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Region.
func (in *Region) DeepCopy() *Region {
	if in == nil {
		return nil
	}
	out := new(Region)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionIterator) DeepCopyInto(out *RegionIterator) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Region, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Metadata.DeepCopyInto(&out.Metadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionIterator.
func (in *RegionIterator) DeepCopy() *RegionIterator {
	if in == nil {
		return nil
	}
	out := new(RegionIterator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSpec) DeepCopyInto(out *RegionSpec) {
	*out = *in
	if in.AvailableZones != nil {
		in, out := &in.AvailableZones, &out.AvailableZones
		*out = make([]Zone, len(*in))
		copy(*out, *in)
	}
	if in.Providers != nil {
		in, out := &in.Providers, &out.Providers
		*out = make([]Provider, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSpec.
func (in *RegionSpec) DeepCopy() *RegionSpec {
	if in == nil {
		return nil
	}
	out := new(RegionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Regions) DeepCopyInto(out *Regions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Regions.
func (in *Regions) DeepCopy() *Regions {
	if in == nil {
		return nil
	}
	out := new(Regions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Regions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsList) DeepCopyInto(out *RegionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsList.
func (in *RegionsList) DeepCopy() *RegionsList {
	if in == nil {
		return nil
	}
	out := new(RegionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseMetadata) DeepCopyInto(out *ResponseMetadata) {
	*out = *in
	if in.SkipToken != nil {
		in, out := &in.SkipToken, &out.SkipToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseMetadata.
func (in *ResponseMetadata) DeepCopy() *ResponseMetadata {
	if in == nil {
		return nil
	}
	out := new(ResponseMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TenantMetadata) DeepCopyInto(out *TenantMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TenantMetadata.
func (in *TenantMetadata) DeepCopy() *TenantMetadata {
	if in == nil {
		return nil
	}
	out := new(TenantMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeMetadata) DeepCopyInto(out *TypeMetadata) {
	*out = *in
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeMetadata.
func (in *TypeMetadata) DeepCopy() *TypeMetadata {
	if in == nil {
		return nil
	}
	out := new(TypeMetadata)
	in.DeepCopyInto(out)
	return out
}
