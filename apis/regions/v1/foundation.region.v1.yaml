openapi: 3.0.3
info:
  title: Regions
  version: v1
  description: |
    The Global Regions API provides access to foundational resources
    that are shared across all tenants and workspaces in all regions.
    This API is part of the Sovereign European Cloud API.
servers:
  - url: https://demo.secapi.cloud/providers/seca.region
    description: Path Schema
  - url: https://region.seca.demo.secapi.cloud
    description: DNS Schema
security:
  - bearerAuth: []
tags:
  - name: Region
    description: Region management
paths:
  /v1/regions:
    get:
      tags:
        - Region
      security:
        - bearerAuth: []
      summary: List regions
      description: |
        Lists regions and provides paginated, filtered access.
      operationId: listRegions
      parameters:
        - $ref: '#/components/parameters/labelSelector'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/skipTokenParam'
        - $ref: '#/components/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionIterator'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '500':
          $ref: '#/components/responses/Error500'
  /v1/regions/{name}:
    get:
      tags:
        - Region
      security:
        - bearerAuth: []
      summary: Get region
      description: |
        Get a specific region, useful for polling status updates of resources.
      operationId: getRegion
      parameters:
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
        '500':
          $ref: '#/components/responses/Error500'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Use a JWT token for authentication. The token identifies the user,
        and policies (RBAC, ABAC, or hybrid) determine authorization.
  schemas:
    RegionIterator:
      description: Iterator for regions
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of regions
          type: array
          items:
            $ref: '#/components/schemas/Region'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
    NameMetadata:
      type: object
      readOnly: true
      required:
        - name
      description: Metadata for resource names
      properties:
        name:
          type: string
          description: |
            Resource identifier in dash-case (kebab-case) format. Must start and end with an alphanumeric character.
            Can contain lowercase letters, numbers, and hyphens. Multiple segments can be joined with dots.
            Each segment follows the same rules.
          minLength: 1
          maxLength: 128
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
          example: resource-name
    PermissionMetadata:
      type: object
      readOnly: true
      description: Metadata for permission management
      required:
        - provider
        - resource
        - verb
      properties:
        provider:
          type: string
          maxLength: 64
          example: seca.compute/v1
        resource:
          type: string
          maxLength: 256
          example: tenants/1/workspaces/ws-1/instances/my-server
        verb:
          type: string
          maxLength: 7
          example: get
      example:
        provider: seca.compute/v1
        resource: tenants/1/workspaces/ws-1/instances/my-server
        verb: get
    ModificationMetadata:
      type: object
      readOnly: true
      description: Base metadata for all resources with optional region references
      required:
        - createdAt
        - lastModifiedAt
        - resourceVersion
      properties:
        createdAt:
          type: string
          format: date-time
          description: Indicates the time when the resource was created. The field is set by the provider and should not be modified by the user.
        deletedAt:
          type: string
          format: date-time
          description: If set, indicates the time when the resource was marked for deletion. Resources with this field set are considered pending deletion.
        lastModifiedAt:
          type: string
          format: date-time
          description: Indicates the time when the resource was created or last modified. Field is used for "If-Unmodified-Since" logic for concurrency control. The provider guarantees that a modification on a single resource can happen only once every millisecond.
        resourceVersion:
          type: integer
          description: Incremented on every modification of the resource. Used for optimistic concurrency control.
          maxLength: 16
    ReferenceURN:
      type: string
      description: |
        A unique resource name used to reference this resource in other resources. The reference
        is represented as the full URN (Uniform Resource Name) name of the resource. 

        ### Automatic Prefix Inference

        In most cases, the prefix of the URN can be automatically derived in the given context.
        To simplify usage, only the resource type and name might be specified as a reference
        using the `<type>/<name>` notation. The suffix can be made more specific by adding
        additional segments separated by slashes. 

        The prefix is automatically inferred from the context. For example, if the resource is a
        block storage in the same workspace the reference can be specified as 
        `block-storages/my-block-storage`. If the resource is a block storage in a different workspace, the
        reference can be specified as `workspaces/ws-1/block-storages/my-block-storage`.

        For automatic prefix inference, the following rules apply:
        - the version is inferred from the current resource version
        - the workspace is inferred from the current workspace
        - the region is inferred from the current region
        - the provider is inferred from the type and context of the usage

        The prefix inference is resolved on admission into the full URN format, which makes it
        mostly suitable for human use.
      maxLength: 255
      example: resources/resource-a1b2c3
    ReferenceObject:
      type: object
      description: |
        A reference to a resource using an object. The object contains the
        same information as the ReferenceURN, but is represented as a structured object.
        The advantage of this representation is that it can be used to reference
        resources in different workspaces or regions without the need to specify
        the full URN.
      required:
        - resource
      properties:
        region:
          type: string
          description: |
            Region of the resource. If not set, the region is inferred from the context.
          maxLength: 64
          example: us-west-1
        provider:
          type: string
          description: |
            Provider of the resource. If not set, the provider is inferred from the context.
          maxLength: 64
          example: seca.compute/v1
        tenant:
          type: string
          description: |
            Tenant of the resource. If not set, the tenant is inferred from the context.
          maxLength: 64
          example: tenant-1
        workspace:
          type: string
          description: |
            Workspace of the resource. If not set, the workspace is inferred from the context.
          maxLength: 64
          example: workspace-1
        resource:
          type: string
          description: |
            Name and type of the resource. Must be in the format `<type>/<name>`.
            The type is the resource type, and the name is the resource name.
          maxLength: 256
          example: resources/resource-a1b2c3
    Reference:
      description: |
        Reference to a resource. The reference is represented as the full URN (Uniform Resource Name) name of the resource.
        The reference can be used to refer to a resource in other resources.
      anyOf:
        - $ref: '#/components/schemas/ReferenceURN'
        - $ref: '#/components/schemas/ReferenceObject'
    TypeMetadata:
      type: object
      readOnly: true
      required:
        - apiVersion
        - kind
      description: |
        Metadata for all resources with type information.
      properties:
        apiVersion:
          type: string
          description: API version of the resource
          maxLength: 16
          default: v1
        kind:
          type: string
          description: Type of the resource
          enum:
            - activity-log
            - block-storage
            - image
            - instance
            - instance-sku
            - network
            - network-load-balancer
            - network-sku
            - nic
            - object-storage-account
            - public-ip
            - region
            - role
            - role-assignment
            - routing-table
            - security-group
            - security-group-rule
            - storage-sku
            - subnet
            - workspace
        ref:
          $ref: '#/components/schemas/Reference'
    TenantMetadata:
      type: object
      description: Metadata for global resources with tenant constraints
      readOnly: true
      required:
        - tenant
      properties:
        tenant:
          type: string
          description: Tenant identifier
          maxLength: 64
    GlobalResourceMetadata:
      description: |
        Metadata for global resources with name, permission, modification, type, and tenant information.
      allOf:
        - $ref: '#/components/schemas/NameMetadata'
        - $ref: '#/components/schemas/PermissionMetadata'
        - $ref: '#/components/schemas/ModificationMetadata'
        - $ref: '#/components/schemas/TypeMetadata'
        - $ref: '#/components/schemas/TenantMetadata'
    Zone:
      type: string
      description: Reference to a specific zone within a region
      maxLength: 32
      example: a
    Provider:
      type: object
      description: |
        A provider of cloud services
      required:
        - name
        - version
        - url
      properties:
        name:
          type: string
          maxLength: 64
          example: seca.network
        version:
          type: string
          maxLength: 16
          example: v1
        url:
          type: string
          maxLength: 4000
          example: https://demo.secapi.cloud/providers/seca.network
    RegionSpec:
      type: object
      description: |
        The specification of a region, including the available zones and providers.
      required:
        - availableZones
        - providers
      properties:
        availableZones:
          description: |
            The list of zones available in the region.
          type: array
          items:
            $ref: '#/components/schemas/Zone'
          example:
            - a
            - b
            - c
        providers:
          description: |
            The list of providers available in the region.
          type: array
          items:
            $ref: '#/components/schemas/Provider'
    Region:
      type: object
      description: |
        Represents a region, which is a geographical location
        with one or more zones. 
      required:
        - spec
      properties:
        metadata:
          $ref: '#/components/schemas/GlobalResourceMetadata'
        spec:
          $ref: '#/components/schemas/RegionSpec'
    ResponseMetadata:
      description: |
        Metadata for response objects.
      allOf:
        - $ref: '#/components/schemas/PermissionMetadata'
        - type: object
          readOnly: true
          properties:
            skipToken:
              type: string
              description: Opaque cursor to get the next page. Field is omitted when there are no more pages available.
              maxLength: 5
      example:
        skipToken: 'false'
        provider: seca.compute/v1
        resource: tenants/1/workspaces/ws-1/instances/my-server
        verb: get
    ErrorSource:
      type: object
      description: An object containing references to the source of the error.
      required:
        - pointer
        - parameter
      properties:
        pointer:
          type: string
          description: A JSON Pointer [RFC6901] to the associated entity in the request document.
          maxLength: 256
        parameter:
          type: string
          description: A string indicating which URI query parameter caused the error.
          maxLength: 64
    Error:
      type: object
      description: |
        A detailed error response see https://datatracker.ietf.org/doc/html/rfc7807.
      required:
        - type
        - title
        - status
        - instance
      properties:
        type:
          type: string
          description: The type of error, expressed as a URI.
          maxLength: 4000
          example: https://httpstatuses.io/400
        title:
          type: string
          description: |
            A short, human-readable summary of the problem
            type.  It SHOULD NOT change from occurrence to occurrence of the
            problem, except for purposes of localization (e.g., using
            proactive content negotiation; see [RFC7231], Section 3.4).
          maxLength: 1024
        status:
          type: number
          description: |
            The HTTP status type ([http://secapi.eu/errors/-rfc7231], Section 6)
            generated by the origin server for this occurrence of the problem.
          minimum: 100
          maximum: 599
          example: 400
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          maxLength: 32768
        instance:
          type: string
          description: |
            A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          maxLength: 256
        sources:
          type: array
          items:
            $ref: '#/components/schemas/ErrorSource'
        meta:
          type: object
          description: A meta object containing non-standard meta-information about the error.
    Error400:
      description: A 400 Bad Request error response
      allOf:
        - $ref: '#/components/schemas/Error'
        - description: A 400 Bad Request error response
          example:
            status: 400
            type: http://secapi.eu/errors/invalid-request
            title: Bad Request
            detail: The request was invalid or cannot be served.
            instance: /errors/400
    Error401:
      description: A 401 Unauthorized error response
      allOf:
        - $ref: '#/components/schemas/Error'
        - description: A 401 Unauthorized error response
          example:
            status: 401
            type: http://secapi.eu/errors/unauthorized
            title: Unauthorized
            detail: Authentication is required and has failed or has not been provided.
            instance: /errors/401
    Error403:
      description: A 403 Forbidden error response
      allOf:
        - $ref: '#/components/schemas/Error'
        - description: A 403 Forbidden error response
          example:
            status: 403
            type: http://secapi.eu/errors/forbidden
            title: Forbidden
            detail: The request was valid, but the server is refusing action.
            instance: /errors/403
    Error500:
      description: A 500 Internal Server Error error response
      allOf:
        - $ref: '#/components/schemas/Error'
        - description: A 500 Internal Server Error error response
          example:
            status: 500
            type: http://secapi.eu/errors/internal-server-error
            title: Internal Server Error
            detail: The server encountered an unexpected condition that prevented it from fulfilling the request.
            instance: /errors/500
    Error404:
      description: A 404 Not Found error response
      allOf:
        - $ref: '#/components/schemas/Error'
        - description: A 404 Not Found error response
          example:
            status: 404
            type: http://secapi.eu/errors/resource-not-found
            title: Not Found
            detail: The requested resource could not be found.
            instance: /errors/404
  parameters:
    labelSelector:
      in: query
      name: labels
      description: |
        Filter resources by their labels. Multiple filters are combined with comma.
        Filter syntax:
          - Equals: key=value
          - Not equals: key!=value
          - Wildcards: *key*=*value* - matches if at least one pair match
          - Numeric: key>value, key<value, key>=value, key<=value
          - Namespaced key examples: 'monitoring:alert-level=high' or 'billing:team=platform'
      required: false
      schema:
        type: string
        example: cloud:region=us-east-1,billing:team=platform,tier!=dev
    limitParam:
      in: query
      name: limit
      description: Maximum number of resources to return in the response
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 1000
    skipTokenParam:
      in: query
      name: skipToken
      description: Opaque cursor for pagination. Use the skipToken from the previous response to get the next page of results. Note that skipTokens do not guarantee consistency across pages if the underlying data changes between requests
      required: false
      schema:
        type: string
    acceptHeader:
      in: header
      name: Accept
      schema:
        type: string
        default: application/json
        example: application/json; deleted=true
        enum:
          - application/json
          - application/json; deleted=true
          - application/json; deleted=only
      description: |
        Controls whether deleted resources are included:
        - `"application/json"`: Returns only non-deleted resources
        - `"application/json; deleted=true"`: Returns both deleted and non-deleted resources
        - `"application/json; deleted=only"`: Returns only deleted resources
    resourceName:
      name: name
      in: path
      required: true
      schema:
        type: string
      description: Resource name
  responses:
    Error400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
          example:
            status: 400
            type: http://secapi.eu/errors/invalid-request
            title: Bad Request
            detail: The request was invalid or cannot be served.
            instance: /errors/400
    Error401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error401'
          example:
            status: 401
            type: http://secapi.eu/errors/unauthorized
            title: Unauthorized
            detail: Authentication is required and has failed or has not been provided.
            instance: /errors/401
    Error403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error403'
          example:
            status: 403
            type: http://secapi.eu/errors/forbidden
            title: Forbidden
            detail: The request was valid, but the server is refusing action.
            instance: /errors/403
    Error500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error500'
          example:
            status: 500
            type: http://secapi.eu/errors/internal-server-error
            title: Internal Server Error
            detail: The server encountered an unexpected condition that prevented it from fulfilling the request.
            instance: /errors/500
    Error404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error404'
          example:
            status: 404
            type: http://secapi.eu/errors/resource-not-found
            title: Not Found
            detail: The requested resource could not be found.
            instance: /errors/404
