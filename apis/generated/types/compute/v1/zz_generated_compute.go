// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package v1
// +kubebuilder:object:generate=true

import (
	resource "github.com/eu-sovereign-cloud/ecp/apis/generated/types/resource"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for VolumeReferenceType.
const (
	Virtio VolumeReferenceType = "virtio"
)

// Defines values for AcceptHeader.
const (
	AcceptHeaderApplicationjson            AcceptHeader = "application/json"
	AcceptHeaderApplicationjsonDeletedOnly AcceptHeader = "application/json; deleted=only"
	AcceptHeaderApplicationjsonDeletedTrue AcceptHeader = "application/json; deleted=true"
)

// Defines values for ListSkusParamsAccept.
const (
	ListSkusParamsAcceptApplicationjson            ListSkusParamsAccept = "application/json"
	ListSkusParamsAcceptApplicationjsonDeletedOnly ListSkusParamsAccept = "application/json; deleted=only"
	ListSkusParamsAcceptApplicationjsonDeletedTrue ListSkusParamsAccept = "application/json; deleted=true"
)

// Defines values for ListInstancesParamsAccept.
const (
	Applicationjson            ListInstancesParamsAccept = "application/json"
	ApplicationjsonDeletedOnly ListInstancesParamsAccept = "application/json; deleted=only"
	ApplicationjsonDeletedTrue ListInstancesParamsAccept = "application/json; deleted=true"
)

// Instance defines model for Instance.
type Instance struct {
	// Annotations User-defined key/value pairs that are mutable and can be used to add annotations.
	// The number of annotations is eventually limited by the CSP.
	Annotations *map[string]string `json:"annotations,omitempty"`

	// Extensions User-defined key/value pairs that are mutable and can be used to add extensions.
	// Extensions are subject to validation by the CSP, and any value that is not accepted will be rejected during admission.
	Extensions *map[string]string `json:"extensions,omitempty"`

	// Labels User-defined key/value pairs that are mutable and can be used to
	// organize and categorize resources. They can be used to filter resources.
	// The number of labels is eventually limited by the CSP.
	Labels *map[string]string `json:"labels,omitempty"`

	// Metadata Metadata for zonal resources with name, permission, modification, type, tenant, region, and zone information.
	Metadata *resource.ZonalResourceMetadata `json:"metadata,omitempty"`

	// Spec Specification of the instance, including its SKU, network configuration, and storage options.
	Spec InstanceSpec `json:"spec"`

	Status *InstanceStatus `json:"status,omitempty"`
}

// InstanceIterator Iterator for instances
type InstanceIterator struct {
	// Items List of instances
	Items []Instance `json:"items"`

	// Metadata Metadata for response objects.
	Metadata resource.ResponseMetadata `json:"metadata"`
}

// InstanceSku defines model for InstanceSku.
type InstanceSku struct {
	// Annotations System-defined key/value pairs to annotate the resource.
	Annotations *map[string]string `json:"annotations,omitempty"`

	// Extensions System-defined key/value pairs to document available extensions.
	Extensions *map[string]string `json:"extensions,omitempty"`

	// Labels System-defined key/value pairs to filter resources.
	Labels *map[string]string `json:"labels,omitempty"`

	// Metadata Metadata for SKU resources.
	Metadata *resource.SkuResourceMetadata `json:"metadata,omitempty"`

	// Spec Specification of the instance SKU, including its capabilities and extensions.
	Spec *InstanceSkuSpec `json:"spec,omitempty"`
}

// InstanceSkuSpec Specification of the instance SKU, including its capabilities and extensions.
type InstanceSkuSpec struct {
	// Ram The amount of RAM (Random Access Memory) allocated to the instance SKU in gigabytes.
	// This value represents the total memory available to the instance.
	Ram int `json:"ram"`

	// VCPU The number of virtual CPUs (vCPUs) allocated to the instance SKU.
	// This value represents the number of cores visible to the operating system.
	// It does not specify the number of physical processors or hyper-threads available.
	VCPU int `json:"vCPU"`
}

// InstanceSpec Specification of the instance, including its SKU, network configuration, and storage options.
type InstanceSpec struct {
	// AdditionalNicRefs Additional NICs attached to this instance
	AdditionalNicRefs *[]resource.Reference `json:"additionalNicRefs,omitempty"`

	// AntiAffinityGroup Anti-affinity group to which this instance belongs.
	// Instances in the same anti-affinity group are placed on different physical hosts.
	// The number of maximum instances in an anti-affinity group is provider-specific.
	AntiAffinityGroup *string `json:"antiAffinityGroup,omitempty"`

	// BootVolume resource.Reference to the block storage used to store the boot volume of the instance.
	BootVolume  VolumeReference    `json:"bootVolume"`
	DataVolumes *[]VolumeReference `json:"dataVolumes,omitempty"`

	// PrimaryNicRef resource.Reference to the primary NIC attached to this instance.
	PrimaryNicRef *resource.Reference `json:"primaryNicRef,omitempty"`

	// SecurityGroupRef resource.Reference to the security group associated with this instance.
	SecurityGroupRef *resource.Reference `json:"securityGroupRef,omitempty"`

	// SkuRef resource.Reference to the SKU of the instance.
	SkuRef resource.Reference `json:"skuRef"`

	// SshKeys Provider-specific references to SSH keys used in cloud-init vendorData.
	// These references are used to inject SSH public keys during instance initialization
	// through cloud-init's vendor data configuration.
	SshKeys *[]string `json:"sshKeys,omitempty"`

	// UserData Cloud-init user data for instance initialization
	// Example cloud-init user configuration with SSH key:
	UserData *string `json:"userData,omitempty"`

	Zone resource.Zone `json:"zone"`
}

// InstanceStatus Current status of the resource
type InstanceStatus = resource.Status

// SkuIterator Iterator for skus
type SkuIterator struct {
	// Items List of skus
	Items []InstanceSku `json:"items"`

	// Metadata Metadata for response objects.
	Metadata resource.ResponseMetadata `json:"metadata"`
}

// VolumeReference Represents a connection between a Block Storage and an a user of the block storage.
type VolumeReference struct {
	// DeviceRef resource.Reference to the block storage used to store the volume.
	DeviceRef resource.Reference `json:"deviceRef"`

	// Type The connection type depends on the type of device and type of block storage.
	Type *VolumeReferenceType `json:"type,omitempty"`
}

// VolumeReferenceType The connection type depends on the type of device and type of block storage.
type VolumeReferenceType string

// AcceptHeader defines model for acceptHeader.
type AcceptHeader string

// IfUnmodifiedSince defines model for ifUnmodifiedSince.
type IfUnmodifiedSince = int

// LabelSelector defines model for labelSelector.
type LabelSelector = string

// LimitParam defines model for limitParam.
type LimitParam = int

// ResourceName defines model for resourceName.
type ResourceName = string

// SkipTokenParam defines model for skipTokenParam.
type SkipTokenParam = string

// Tenant defines model for tenant.
type Tenant = string

// Workspace defines model for workspace.
type Workspace = string

// ListSkusParams defines parameters for ListSkus.
type ListSkusParams struct {
	// Labels Filter resources by their labels. Multiple filters are combined with comma.
	// Filter syntax:
	//   - Equals: key=value
	//   - Not equals: key!=value
	//   - Wildcards: *key*=*value* - matches if at least one pair match
	//   - Numeric: key>value, key<value, key>=value, key<=value
	//   - Namespaced key examples: 'monitoring:alert-level=high' or 'billing:team=platform'
	Labels *LabelSelector `form:"labels,omitempty" json:"labels,omitempty"`

	// Limit Maximum number of resources to return in the response
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// SkipToken Opaque cursor for pagination. Use the skipToken from the previous response to get the next page of results. Note that skipTokens do not guarantee consistency across pages if the underlying data changes between requests
	SkipToken *SkipTokenParam `form:"skipToken,omitempty" json:"skipToken,omitempty"`

	// Accept Controls whether deleted resources are included:
	// - `"application/json"`: Returns only non-deleted resources
	// - `"application/json; deleted=true"`: Returns both deleted and non-deleted resources
	// - `"application/json; deleted=only"`: Returns only deleted resources
	Accept *ListSkusParamsAccept `json:"Accept,omitempty"`
}

// ListSkusParamsAccept defines parameters for ListSkus.
type ListSkusParamsAccept string

// ListInstancesParams defines parameters for ListInstances.
type ListInstancesParams struct {
	// Labels Filter resources by their labels. Multiple filters are combined with comma.
	// Filter syntax:
	//   - Equals: key=value
	//   - Not equals: key!=value
	//   - Wildcards: *key*=*value* - matches if at least one pair match
	//   - Numeric: key>value, key<value, key>=value, key<=value
	//   - Namespaced key examples: 'monitoring:alert-level=high' or 'billing:team=platform'
	Labels *LabelSelector `form:"labels,omitempty" json:"labels,omitempty"`

	// Limit Maximum number of resources to return in the response
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// SkipToken Opaque cursor for pagination. Use the skipToken from the previous response to get the next page of results. Note that skipTokens do not guarantee consistency across pages if the underlying data changes between requests
	SkipToken *SkipTokenParam `form:"skipToken,omitempty" json:"skipToken,omitempty"`

	// Accept Controls whether deleted resources are included:
	// - `"application/json"`: Returns only non-deleted resources
	// - `"application/json; deleted=true"`: Returns both deleted and non-deleted resources
	// - `"application/json; deleted=only"`: Returns only deleted resources
	Accept *ListInstancesParamsAccept `json:"Accept,omitempty"`
}

// ListInstancesParamsAccept defines parameters for ListInstances.
type ListInstancesParamsAccept string

// DeleteInstanceParams defines parameters for DeleteInstance.
type DeleteInstanceParams struct {
	// IfUnmodifiedSince Returns resources only if they have not been modified since the specified version.
	// Uses metadata.resourceVersion for comparison.
	IfUnmodifiedSince *IfUnmodifiedSince `json:"if-unmodified-since,omitempty"`
}

// CreateOrUpdateInstanceParams defines parameters for CreateOrUpdateInstance.
type CreateOrUpdateInstanceParams struct {
	// IfUnmodifiedSince Returns resources only if they have not been modified since the specified version.
	// Uses metadata.resourceVersion for comparison.
	IfUnmodifiedSince *IfUnmodifiedSince `json:"if-unmodified-since,omitempty"`
}

// RestartInstanceParams defines parameters for RestartInstance.
type RestartInstanceParams struct {
	// IfUnmodifiedSince Returns resources only if they have not been modified since the specified version.
	// Uses metadata.resourceVersion for comparison.
	IfUnmodifiedSince *IfUnmodifiedSince `json:"if-unmodified-since,omitempty"`
}

// StartInstanceParams defines parameters for StartInstance.
type StartInstanceParams struct {
	// IfUnmodifiedSince Returns resources only if they have not been modified since the specified version.
	// Uses metadata.resourceVersion for comparison.
	IfUnmodifiedSince *IfUnmodifiedSince `json:"if-unmodified-since,omitempty"`
}

// StopInstanceParams defines parameters for StopInstance.
type StopInstanceParams struct {
	// IfUnmodifiedSince Returns resources only if they have not been modified since the specified version.
	// Uses metadata.resourceVersion for comparison.
	IfUnmodifiedSince *IfUnmodifiedSince `json:"if-unmodified-since,omitempty"`
}

// CreateOrUpdateInstanceJSONRequestBody defines body for CreateOrUpdateInstance for application/json ContentType.
type CreateOrUpdateInstanceJSONRequestBody = Instance
