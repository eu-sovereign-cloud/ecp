//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	"github.com/eu-sovereign-cloud/ecp/apis/generated/types/resource"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateOrUpdateInstanceParams) DeepCopyInto(out *CreateOrUpdateInstanceParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateOrUpdateInstanceParams.
func (in *CreateOrUpdateInstanceParams) DeepCopy() *CreateOrUpdateInstanceParams {
	if in == nil {
		return nil
	}
	out := new(CreateOrUpdateInstanceParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteInstanceParams) DeepCopyInto(out *DeleteInstanceParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteInstanceParams.
func (in *DeleteInstanceParams) DeepCopy() *DeleteInstanceParams {
	if in == nil {
		return nil
	}
	out := new(DeleteInstanceParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(resource.ZonalResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(InstanceStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIterator) DeepCopyInto(out *InstanceIterator) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Metadata.DeepCopyInto(&out.Metadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIterator.
func (in *InstanceIterator) DeepCopy() *InstanceIterator {
	if in == nil {
		return nil
	}
	out := new(InstanceIterator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSku) DeepCopyInto(out *InstanceSku) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(resource.SkuResourceMetadata)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(InstanceSkuSpec)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSku.
func (in *InstanceSku) DeepCopy() *InstanceSku {
	if in == nil {
		return nil
	}
	out := new(InstanceSku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSkuSpec) DeepCopyInto(out *InstanceSkuSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSkuSpec.
func (in *InstanceSkuSpec) DeepCopy() *InstanceSkuSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSkuSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	if in.AdditionalNicRefs != nil {
		in, out := &in.AdditionalNicRefs, &out.AdditionalNicRefs
		*out = new([]resource.Reference)
		if **in != nil {
			in, out := *in, *out
			*out = make([]resource.Reference, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.AntiAffinityGroup != nil {
		in, out := &in.AntiAffinityGroup, &out.AntiAffinityGroup
		*out = new(string)
		**out = **in
	}
	in.BootVolume.DeepCopyInto(&out.BootVolume)
	if in.DataVolumes != nil {
		in, out := &in.DataVolumes, &out.DataVolumes
		*out = new([]VolumeReference)
		if **in != nil {
			in, out := *in, *out
			*out = make([]VolumeReference, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.PrimaryNicRef != nil {
		in, out := &in.PrimaryNicRef, &out.PrimaryNicRef
		*out = new(resource.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupRef != nil {
		in, out := &in.SecurityGroupRef, &out.SecurityGroupRef
		*out = new(resource.Reference)
		(*in).DeepCopyInto(*out)
	}
	in.SkuRef.DeepCopyInto(&out.SkuRef)
	if in.SshKeys != nil {
		in, out := &in.SshKeys, &out.SshKeys
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListInstancesParams) DeepCopyInto(out *ListInstancesParams) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(LabelSelector)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(LimitParam)
		**out = **in
	}
	if in.SkipToken != nil {
		in, out := &in.SkipToken, &out.SkipToken
		*out = new(SkipTokenParam)
		**out = **in
	}
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(ListInstancesParamsAccept)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListInstancesParams.
func (in *ListInstancesParams) DeepCopy() *ListInstancesParams {
	if in == nil {
		return nil
	}
	out := new(ListInstancesParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListSkusParams) DeepCopyInto(out *ListSkusParams) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(LabelSelector)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(LimitParam)
		**out = **in
	}
	if in.SkipToken != nil {
		in, out := &in.SkipToken, &out.SkipToken
		*out = new(SkipTokenParam)
		**out = **in
	}
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(ListSkusParamsAccept)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListSkusParams.
func (in *ListSkusParams) DeepCopy() *ListSkusParams {
	if in == nil {
		return nil
	}
	out := new(ListSkusParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestartInstanceParams) DeepCopyInto(out *RestartInstanceParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestartInstanceParams.
func (in *RestartInstanceParams) DeepCopy() *RestartInstanceParams {
	if in == nil {
		return nil
	}
	out := new(RestartInstanceParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuIterator) DeepCopyInto(out *SkuIterator) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceSku, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Metadata.DeepCopyInto(&out.Metadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuIterator.
func (in *SkuIterator) DeepCopy() *SkuIterator {
	if in == nil {
		return nil
	}
	out := new(SkuIterator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartInstanceParams) DeepCopyInto(out *StartInstanceParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartInstanceParams.
func (in *StartInstanceParams) DeepCopy() *StartInstanceParams {
	if in == nil {
		return nil
	}
	out := new(StartInstanceParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StopInstanceParams) DeepCopyInto(out *StopInstanceParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StopInstanceParams.
func (in *StopInstanceParams) DeepCopy() *StopInstanceParams {
	if in == nil {
		return nil
	}
	out := new(StopInstanceParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeReference) DeepCopyInto(out *VolumeReference) {
	*out = *in
	in.DeviceRef.DeepCopyInto(&out.DeviceRef)
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(VolumeReferenceType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeReference.
func (in *VolumeReference) DeepCopy() *VolumeReference {
	if in == nil {
		return nil
	}
	out := new(VolumeReference)
	in.DeepCopyInto(out)
	return out
}
