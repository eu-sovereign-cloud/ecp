//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	"github.com/eu-sovereign-cloud/ecp/apis/generated/types/resource"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorage) DeepCopyInto(out *BlockStorage) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(resource.ZonalResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(BlockStorageStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorage.
func (in *BlockStorage) DeepCopy() *BlockStorage {
	if in == nil {
		return nil
	}
	out := new(BlockStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageIterator) DeepCopyInto(out *BlockStorageIterator) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BlockStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Metadata.DeepCopyInto(&out.Metadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageIterator.
func (in *BlockStorageIterator) DeepCopy() *BlockStorageIterator {
	if in == nil {
		return nil
	}
	out := new(BlockStorageIterator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageSpec) DeepCopyInto(out *BlockStorageSpec) {
	*out = *in
	in.SkuRef.DeepCopyInto(&out.SkuRef)
	if in.SourceImageRef != nil {
		in, out := &in.SourceImageRef, &out.SourceImageRef
		*out = new(resource.Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageSpec.
func (in *BlockStorageSpec) DeepCopy() *BlockStorageSpec {
	if in == nil {
		return nil
	}
	out := new(BlockStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageStatus) DeepCopyInto(out *BlockStorageStatus) {
	*out = *in
	if in.AttachedTo != nil {
		in, out := &in.AttachedTo, &out.AttachedTo
		*out = new(resource.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]resource.StatusCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(resource.ResourceState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageStatus.
func (in *BlockStorageStatus) DeepCopy() *BlockStorageStatus {
	if in == nil {
		return nil
	}
	out := new(BlockStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateOrUpdateBlockStorageParams) DeepCopyInto(out *CreateOrUpdateBlockStorageParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateOrUpdateBlockStorageParams.
func (in *CreateOrUpdateBlockStorageParams) DeepCopy() *CreateOrUpdateBlockStorageParams {
	if in == nil {
		return nil
	}
	out := new(CreateOrUpdateBlockStorageParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateOrUpdateImageParams) DeepCopyInto(out *CreateOrUpdateImageParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateOrUpdateImageParams.
func (in *CreateOrUpdateImageParams) DeepCopy() *CreateOrUpdateImageParams {
	if in == nil {
		return nil
	}
	out := new(CreateOrUpdateImageParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteBlockStorageParams) DeepCopyInto(out *DeleteBlockStorageParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteBlockStorageParams.
func (in *DeleteBlockStorageParams) DeepCopy() *DeleteBlockStorageParams {
	if in == nil {
		return nil
	}
	out := new(DeleteBlockStorageParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteImageParams) DeepCopyInto(out *DeleteImageParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteImageParams.
func (in *DeleteImageParams) DeepCopy() *DeleteImageParams {
	if in == nil {
		return nil
	}
	out := new(DeleteImageParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image) DeepCopyInto(out *Image) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(resource.RegionalResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(ImageStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image.
func (in *Image) DeepCopy() *Image {
	if in == nil {
		return nil
	}
	out := new(Image)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIterator) DeepCopyInto(out *ImageIterator) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Image, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Metadata.DeepCopyInto(&out.Metadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIterator.
func (in *ImageIterator) DeepCopy() *ImageIterator {
	if in == nil {
		return nil
	}
	out := new(ImageIterator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSpec) DeepCopyInto(out *ImageSpec) {
	*out = *in
	in.BlockStorageRef.DeepCopyInto(&out.BlockStorageRef)
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(ImageSpecBoot)
		**out = **in
	}
	if in.Initializer != nil {
		in, out := &in.Initializer, &out.Initializer
		*out = new(ImageSpecInitializer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSpec.
func (in *ImageSpec) DeepCopy() *ImageSpec {
	if in == nil {
		return nil
	}
	out := new(ImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStatus) DeepCopyInto(out *ImageStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]resource.StatusCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SizeMB != nil {
		in, out := &in.SizeMB, &out.SizeMB
		*out = new(int)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(resource.ResourceState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageStatus.
func (in *ImageStatus) DeepCopy() *ImageStatus {
	if in == nil {
		return nil
	}
	out := new(ImageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListBlockStoragesParams) DeepCopyInto(out *ListBlockStoragesParams) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(LabelSelector)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(LimitParam)
		**out = **in
	}
	if in.SkipToken != nil {
		in, out := &in.SkipToken, &out.SkipToken
		*out = new(SkipTokenParam)
		**out = **in
	}
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(ListBlockStoragesParamsAccept)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListBlockStoragesParams.
func (in *ListBlockStoragesParams) DeepCopy() *ListBlockStoragesParams {
	if in == nil {
		return nil
	}
	out := new(ListBlockStoragesParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListImagesParams) DeepCopyInto(out *ListImagesParams) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(LabelSelector)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(LimitParam)
		**out = **in
	}
	if in.SkipToken != nil {
		in, out := &in.SkipToken, &out.SkipToken
		*out = new(SkipTokenParam)
		**out = **in
	}
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(ListImagesParamsAccept)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListImagesParams.
func (in *ListImagesParams) DeepCopy() *ListImagesParams {
	if in == nil {
		return nil
	}
	out := new(ListImagesParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListSkusParams) DeepCopyInto(out *ListSkusParams) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(LabelSelector)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(LimitParam)
		**out = **in
	}
	if in.SkipToken != nil {
		in, out := &in.SkipToken, &out.SkipToken
		*out = new(SkipTokenParam)
		**out = **in
	}
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(ListSkusParamsAccept)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListSkusParams.
func (in *ListSkusParams) DeepCopy() *ListSkusParams {
	if in == nil {
		return nil
	}
	out := new(ListSkusParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuIterator) DeepCopyInto(out *SkuIterator) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageSku, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Metadata.DeepCopyInto(&out.Metadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuIterator.
func (in *SkuIterator) DeepCopy() *SkuIterator {
	if in == nil {
		return nil
	}
	out := new(SkuIterator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageSku) DeepCopyInto(out *StorageSku) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(resource.SkuResourceMetadata)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(StorageSkuSpec)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageSku.
func (in *StorageSku) DeepCopy() *StorageSku {
	if in == nil {
		return nil
	}
	out := new(StorageSku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageSkuSpec) DeepCopyInto(out *StorageSkuSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageSkuSpec.
func (in *StorageSkuSpec) DeepCopy() *StorageSkuSpec {
	if in == nil {
		return nil
	}
	out := new(StorageSkuSpec)
	in.DeepCopyInto(out)
	return out
}
