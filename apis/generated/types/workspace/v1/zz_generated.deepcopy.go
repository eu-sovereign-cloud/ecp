//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	"github.com/eu-sovereign-cloud/ecp/apis/generated/types/resource"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateOrUpdateWorkspaceParams) DeepCopyInto(out *CreateOrUpdateWorkspaceParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateOrUpdateWorkspaceParams.
func (in *CreateOrUpdateWorkspaceParams) DeepCopy() *CreateOrUpdateWorkspaceParams {
	if in == nil {
		return nil
	}
	out := new(CreateOrUpdateWorkspaceParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteWorkspaceParams) DeepCopyInto(out *DeleteWorkspaceParams) {
	*out = *in
	if in.IfUnmodifiedSince != nil {
		in, out := &in.IfUnmodifiedSince, &out.IfUnmodifiedSince
		*out = new(IfUnmodifiedSince)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteWorkspaceParams.
func (in *DeleteWorkspaceParams) DeepCopy() *DeleteWorkspaceParams {
	if in == nil {
		return nil
	}
	out := new(DeleteWorkspaceParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListWorkspacesParams) DeepCopyInto(out *ListWorkspacesParams) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(LabelSelector)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(LimitParam)
		**out = **in
	}
	if in.SkipToken != nil {
		in, out := &in.SkipToken, &out.SkipToken
		*out = new(SkipTokenParam)
		**out = **in
	}
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(ListWorkspacesParamsAccept)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListWorkspacesParams.
func (in *ListWorkspacesParams) DeepCopy() *ListWorkspacesParams {
	if in == nil {
		return nil
	}
	out := new(ListWorkspacesParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workspace) DeepCopyInto(out *Workspace) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(resource.RegionalResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(WorkspaceStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workspace.
func (in *Workspace) DeepCopy() *Workspace {
	if in == nil {
		return nil
	}
	out := new(Workspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceIterator) DeepCopyInto(out *WorkspaceIterator) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Metadata.DeepCopyInto(&out.Metadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceIterator.
func (in *WorkspaceIterator) DeepCopy() *WorkspaceIterator {
	if in == nil {
		return nil
	}
	out := new(WorkspaceIterator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceStatus) DeepCopyInto(out *WorkspaceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]resource.StatusCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceCount != nil {
		in, out := &in.ResourceCount, &out.ResourceCount
		*out = new(int)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(resource.ResourceState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceStatus.
func (in *WorkspaceStatus) DeepCopy() *WorkspaceStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceStatus)
	in.DeepCopyInto(out)
	return out
}
