package v1

// +kubebuilder:object:generate=true

import (
	resource "github.com/eu-sovereign-cloud/ecp/apis/generated/types/resource"
)

// Package schema provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.

// Defines values for VolumeReferenceType.
const (
	VolumeReferenceTypeVirtio VolumeReferenceType = "virtio"
)

// BlockStorage defines model for BlockStorage.
type BlockStorage struct {
	// resource.Annotations User-defined key/value pairs that are mutable and can be used to add annotations.
	// The number of annotations is eventually limited by the CSP.
	Annotations resource.Annotations `json:"annotations,omitempty"`

	// resource.Extensions User-defined key/value pairs that are mutable and can be used to add extensions.
	// resource.Extensions are subject to validation by the CSP, and any value that is not accepted will be rejected during admission.
	Extensions resource.Extensions `json:"extensions,omitempty"`

	// resource.Labels User-defined key/value pairs that are mutable and can be used to
	// organize and categorize resources. They can be used to filter resources.
	// The number of labels is eventually limited by the CSP.
	Labels resource.Labels `json:"labels,omitempty"`

	// Metadata Metadata for regional resources with name, permission, modification, type, tenant and workspace and region information.
	Metadata *resource.RegionalWorkspaceResourceMetadata `json:"metadata,omitempty"`

	// Spec resource.References the SKU used for this block.
	// If a reference to the source image is used as the base for creating this block storage.
	Spec BlockStorageSpec `json:"spec"`

	// resource.Status The status of the block storage.
	Status *BlockStorageStatus `json:"status,omitempty"`
}

// BlockStorageSpec References the SKU used for this block.
// If a reference to the source image is used as the base for creating this block storage.
type BlockStorageSpec struct {
	// SizeGB Size of the block storage in GB.
	SizeGB int `json:"sizeGB"`

	// SkuRef resource.Reference to the SKU of the block storage.
	SkuRef resource.Reference `json:"skuRef"`

	// SourceImageRef resource.Reference to the source image used as the base for creating the block storage.
	SourceImageRef *resource.Reference `json:"sourceImageRef,omitempty"`
}

// BlockStorageStatus defines model for BlockStorageStatus.
type BlockStorageStatus struct {
	// AttachedTo resource.Reference to the instance the block storage is attached to.
	AttachedTo *resource.Reference        `json:"attachedTo,omitempty"`
	Conditions []resource.StatusCondition `json:"conditions"`

	// SizeGB Size of the block storage in GB.
	SizeGB int `json:"sizeGB"`

	// State Current phase of the resource:
	// - pending: not available, waiting for other resources
	// - creating: not available, creation started
	// - active: available for data layer usage
	// - updating: available for data layer usage
	// - deleting: maybe still available for data layer user, can fail any moment
	// - suspended: not available, provider specific behavior (payment issue, user decided to suspend)
	// - error: failed to fulfill the request; would be related to provider issue or customer related input.
	State *resource.ResourceState `json:"state,omitempty"`
}

// VolumeReference Represents a connection between a Block Storage and an a user of the block storage.
type VolumeReference struct {
	// DeviceRef resource.Reference to the block storage used to store the volume.
	DeviceRef resource.Reference `json:"deviceRef"`

	// Type The connection type depends on the type of device and type of block storage.
	Type *VolumeReferenceType `json:"type,omitempty"`
}

// VolumeReferenceType The connection type depends on the type of device and type of block storage.
type VolumeReferenceType string
