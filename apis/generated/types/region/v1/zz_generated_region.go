// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package v1
// +kubebuilder:object:generate=true

import (
	resource "github.com/eu-sovereign-cloud/ecp/apis/generated/types/resource"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for AcceptHeader.
const (
	AcceptHeaderApplicationjson            AcceptHeader = "application/json"
	AcceptHeaderApplicationjsonDeletedOnly AcceptHeader = "application/json; deleted=only"
	AcceptHeaderApplicationjsonDeletedTrue AcceptHeader = "application/json; deleted=true"
)

// Defines values for ListRegionsParamsAccept.
const (
	ListRegionsParamsAcceptApplicationjson            ListRegionsParamsAccept = "application/json"
	ListRegionsParamsAcceptApplicationjsonDeletedOnly ListRegionsParamsAccept = "application/json; deleted=only"
	ListRegionsParamsAcceptApplicationjsonDeletedTrue ListRegionsParamsAccept = "application/json; deleted=true"
)

// Provider A provider of cloud services
type Provider struct {
	Name    string `json:"name"`
	Url     string `json:"url"`
	Version string `json:"version"`
}

// Region Represents a region, which is a geographical location
// with one or more zones.
type Region struct {
	// Metadata Metadata for global resources with name, permission, modification, type, and tenant information.
	Metadata *resource.GlobalResourceMetadata `json:"metadata,omitempty"`

	// Spec The specification of a region, including the available zones and providers.
	Spec RegionSpec `json:"spec"`
}

// RegionIterator Iterator for regions
type RegionIterator struct {
	// Items List of regions
	Items []Region `json:"items"`

	// Metadata Metadata for response objects.
	Metadata resource.ResponseMetadata `json:"metadata"`
}

// RegionSpec The specification of a region, including the available zones and providers.
type RegionSpec struct {
	// AvailableZones The list of zones available in the region.
	AvailableZones []resource.Zone `json:"availableZones"`

	// Providers The list of providers available in the region.
	Providers []Provider `json:"providers"`
}

// AcceptHeader defines model for acceptHeader.
type AcceptHeader string

// LabelSelector defines model for labelSelector.
type LabelSelector = string

// LimitParam defines model for limitParam.
type LimitParam = int

// ResourceName defines model for resourceName.
type ResourceName = string

// SkipTokenParam defines model for skipTokenParam.
type SkipTokenParam = string

// ListRegionsParams defines parameters for ListRegions.
type ListRegionsParams struct {
	// Labels Filter resources by their labels. Multiple filters are combined with comma.
	// Filter syntax:
	//   - Equals: key=value
	//   - Not equals: key!=value
	//   - Wildcards: *key*=*value* - matches if at least one pair match
	//   - Numeric: key>value, key<value, key>=value, key<=value
	//   - Namespaced key examples: 'monitoring:alert-level=high' or 'billing:team=platform'
	Labels *LabelSelector `form:"labels,omitempty" json:"labels,omitempty"`

	// Limit Maximum number of resources to return in the response
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// SkipToken Opaque cursor for pagination. Use the skipToken from the previous response to get the next page of results. Note that skipTokens do not guarantee consistency across pages if the underlying data changes between requests
	SkipToken *SkipTokenParam `form:"skipToken,omitempty" json:"skipToken,omitempty"`

	// Accept Controls whether deleted resources are included:
	// - `"application/json"`: Returns only non-deleted resources
	// - `"application/json; deleted=true"`: Returns both deleted and non-deleted resources
	// - `"application/json; deleted=only"`: Returns only deleted resources
	Accept *ListRegionsParamsAccept `json:"Accept,omitempty"`
}

// ListRegionsParamsAccept defines parameters for ListRegions.
type ListRegionsParamsAccept string
